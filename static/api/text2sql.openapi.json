{"openapi":"3.0.0","info":{"version":"1.0.0","title":"Hubble AI Text2SQL API","description":"\n# Hubble AI Text2SQL API\n\nAn intelligent Text2SQL conversion service and chart generation platform based on LangGraph.\n\n## Features\n\n- **Text2SQL Conversion**: Convert natural language queries to SQL and execute them\n- **Chart Generation**: Generate interactive charts from natural language queries\n- **Streaming Support**: Real-time streaming responses for both services\n- **Flexible Response Format**: Choose between streaming and regular JSON responses\n\n## Authentication\n\nAll API endpoints require authentication using the `HUBBLE-API-Key` header:\n\n```bash\ncurl -X 'POST' \\\n  'https://api.hubble-rpc.xyz/agent/api/v1/text2sql' \\\n  -H 'accept: */*' \\\n  -H 'HUBBLE-API-Key: XXXXXXXXXXXXXX' \\\n  -H 'Content-Type: application/json'\n```\n\n## Getting Started\n\nAll APIs support both streaming and non-streaming modes:\n- Set `stream: true` for real-time Server-Sent Events (default)\n- Set `stream: false` for regular JSON responses\n    "},"servers":[{"url":"https://api.hubble-rpc.xyz/agent/api/v1","description":"Production"}],"components":{"schemas":{},"parameters":{},"securitySchemes":{"HUBBLE-API-Key":{"type":"apiKey","in":"header","name":"HUBBLE-API-Key","description":"API key for accessing Hubble services"}}},"paths":{"/status":{"get":{"summary":"Health Check","description":"Checks if the service is running correctly.","tags":["System"],"security":[{"HUBBLE-API-Key":[]}],"responses":{"200":{"description":"Service is running normally.","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","description":"Service status"},"message":{"type":"string","description":"Status message"},"timestamp":{"type":"string","description":"Timestamp of the response"}},"required":["status","message","timestamp"]}}}}}}},"/text2sql":{"post":{"summary":"Text2SQL Conversion","description":"\nConverts a natural language query into an SQL query and executes it. \n\n**Authentication:**\n- Requires `HUBBLE-API-Key` header\n\n**Streaming vs Regular Response:**\n- Set `stream: true` (default) for Server-Sent Events (SSE) streaming\n- Set `stream: false` for regular JSON response\n\n### Streaming Event Types:\n- **workflow_start**: The workflow has started\n- **node_execution**: A node in the graph is being executed (includes node field)\n- **plan_created**: The execution plan has been created\n- **step_completed**: A step in the plan has been completed\n- **llm_start**: LLM generation started\n- **token**: A real-time token generated by the LLM\n- **llm_end**: LLM generation completed\n- **node_error**: An error occurred in a specific node (includes node field)\n- **result**: The final result of the execution\n- **complete**: The process has finished\n- **error**: An error occurred\n\n### Event Fields:\n- **node**: Current node being executed (e.g., \"planner\", \"executor\", \"recovery\", \"completion\")\n- **step**: Current step number in the workflow\n- **totalSteps**: Total number of steps (available in completion events)\n\n### Usage Examples:\n\n**Streaming Response:**\n```javascript\nfetch('/agent/api/v1/text2sql', {\n  method: 'POST',\n  headers: { \n    'Content-Type': 'application/json',\n    'HUBBLE-API-Key': 'your-api-key'\n  },\n  body: JSON.stringify({ \n    query: 'Show me the top 10 token trades by volume today',\n    stream: true // default\n  })\n}).then(response => {\n  const reader = response.body.getReader();\n  // Process streaming data\n});\n```\n\n**Regular Response:**\n```javascript\nfetch('/agent/api/v1/text2sql', {\n  method: 'POST',\n  headers: { \n    'Content-Type': 'application/json',\n    'HUBBLE-API-Key': 'your-api-key'\n  },\n  body: JSON.stringify({ \n    query: 'Show me the top 10 token trades by volume today',\n    stream: false\n  })\n}).then(response => response.json());\n```\n  ","tags":["Text2SQL"],"security":[{"HUBBLE-API-Key":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","minLength":1,"description":"The user's natural language query"},"stream":{"type":"boolean","default":true,"description":"Whether to return streaming response (default: true)"}},"required":["query"]}}}},"responses":{"200":{"description":"Returns either streaming events or JSON response based on stream parameter.","content":{"text/event-stream":{"schema":{"type":"object","properties":{"data":{"type":"object","properties":{"type":{"type":"string","enum":["workflow_start","node_execution","plan_created","step_completed","llm_start","token","llm_end","node_error","result","complete","error"],"description":"The type of the Text2SQL event"},"node":{"type":"string","description":"The current node being executed"},"step":{"type":"number","description":"The current step number"},"totalSteps":{"type":"number","description":"Total number of steps"},"data":{"description":"The event data"},"timestamp":{"type":"string","description":"Timestamp of the event"},"message":{"type":"string","description":"Message associated with the event"}},"required":["type","timestamp"],"description":"SSE event data"}},"required":["data"]}},"application/json":{"schema":{"type":"object","properties":{"data":{"type":"array","items":{},"description":"Query execution results"},"sql":{"type":"string","description":"Generated SQL query"},"timestamp":{"type":"string","description":"Timestamp of the response"}},"required":["data","timestamp"]}}}},"400":{"description":"Invalid request parameters.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","description":"Error message"},"timestamp":{"type":"string","description":"Timestamp of the error"}},"required":["error","timestamp"]}}}},"500":{"description":"Internal server error.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","description":"Error message"},"timestamp":{"type":"string","description":"Timestamp of the error"}},"required":["error","timestamp"]}}}}}}},"/generate-chart":{"post":{"summary":"Chart Generation","description":"\nGenerates interactive charts from natural language queries. First converts the query to SQL, executes it, then creates a chart from the data.\n\n**Authentication:**\n- Requires `HUBBLE-API-Key` header\n\n**Streaming vs Regular Response:**\n- Set `stream: true` (default) for Server-Sent Events (SSE) streaming\n- Set `stream: false` for regular JSON response\n\n### AI Chart Selection:\nThe system automatically analyzes your data and query to select the most appropriate chart type:\n- **Line charts** for time series and trend data\n- **Bar charts** for categorical comparisons\n- **Pie charts** for proportional data\n- **Scatter plots** for correlation analysis\n- **Area charts** for cumulative data\n\n### Streaming Event Types:\n- **chart_start**: Chart generation process started\n- **node_execution**: A node in the workflow is being executed (includes node field)\n- **chart_sql_complete**: SQL query execution completed\n- **chart_generation_start**: Chart generation started\n- **chart_generation_complete**: Chart generation completed\n- **chart_complete**: Entire process completed with chart result\n- **chart_error**: An error occurred during chart generation\n- **node_error**: An error occurred in a specific node (includes node field)\n- **llm_start**: LLM generation started\n- **token**: Real-time LLM token (during generation)\n- **llm_end**: LLM generation completed\n\n### Event Fields:\n- **node**: Current node being executed (e.g., \"text2sql\", \"chart_generation\")\n- **step**: Current step number in the workflow\n- **totalSteps**: Total number of steps (available in completion events)\n\n### Usage Examples:\n\n**Streaming Response:**\n```javascript\nfetch('/agent/api/v1/generate-chart', {\n  method: 'POST',\n  headers: { \n    'Content-Type': 'application/json',\n    'HUBBLE-API-Key': 'your-api-key'\n  },\n  body: JSON.stringify({ \n    query: 'Show token price trends over the last 30 days',\n    stream: true // default\n  })\n}).then(response => {\n  const reader = response.body.getReader();\n  // Process streaming data\n});\n```\n\n**Regular Response:**\n```javascript\nfetch('/agent/api/v1/generate-chart', {\n  method: 'POST',\n  headers: { \n    'Content-Type': 'application/json',\n    'HUBBLE-API-Key': 'your-api-key'\n  },\n  body: JSON.stringify({ \n    query: 'Show token price trends over the last 30 days',\n    stream: false\n  })\n}).then(response => response.json());\n```\n  ","tags":["Charts"],"security":[{"HUBBLE-API-Key":[]}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"query":{"type":"string","minLength":1,"description":"The user's natural language query"},"stream":{"type":"boolean","default":true,"description":"Whether to return streaming response (default: true)"}},"required":["query"]}}}},"responses":{"200":{"description":"Returns either streaming events or JSON response based on stream parameter.","content":{"text/event-stream":{"schema":{"type":"object","properties":{"data":{"type":"object","properties":{"type":{"type":"string","enum":["chart_start","node_execution","chart_sql_complete","chart_generation_start","chart_generation_complete","chart_data_analysis_complete","chart_selection_complete","chart_rendering_complete","chart_complete","chart_error","node_error","llm_start","token","llm_end","error"],"description":"The type of the Chart generation event"},"node":{"type":"string","description":"The current node being executed"},"step":{"type":"number","description":"The current step number"},"totalSteps":{"type":"number","description":"Total number of steps"},"data":{"description":"The event data"},"timestamp":{"type":"string","description":"Timestamp of the event"},"message":{"type":"string","description":"Message associated with the event"}},"required":["type","timestamp"],"description":"SSE event data"}},"required":["data"]}},"application/json":{"schema":{"type":"object","properties":{"sql":{"type":"string","description":"Generated SQL query"},"data":{"description":"Query execution results"},"chart":{"type":"object","properties":{"chartType":{"type":"string","description":"The type of chart generated"},"htmlCode":{"type":"string","description":"Complete HTML code for the chart"},"previewUrl":{"type":"string","description":"URL to preview the chart"},"dataInsights":{"type":"array","items":{"type":"string"},"description":"Insights about the data visualization"},"generationTime":{"type":"number","description":"Time taken to generate the chart in milliseconds"}},"required":["chartType","htmlCode","dataInsights","generationTime"],"description":"Generated chart information"},"timestamp":{"type":"string","description":"Timestamp of the response"}},"required":["sql","chart","timestamp"]}}}},"400":{"description":"Invalid request parameters.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","description":"Error message"},"timestamp":{"type":"string","description":"Timestamp of the error"}},"required":["error","timestamp"]}}}},"500":{"description":"Internal server error.","content":{"application/json":{"schema":{"type":"object","properties":{"error":{"type":"string","description":"Error message"},"timestamp":{"type":"string","description":"Timestamp of the error"}},"required":["error","timestamp"]}}}}}}}},"webhooks":{}}