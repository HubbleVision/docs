openapi: 3.0.0
info:
  contact:
    email: support@hubble.vision
    name: API Support
    url: 'https://hubble.vision'
  description: API for Solana transaction data
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  termsOfService: 'http://swagger.io/terms/'
  title: Solana Data API
  version: '1.0'
servers:
  - url: 'http://localhost:8080/tx/api/v1'
  - url: 'https://localhost:8080/tx/api/v1'
paths:
  /sol/tx:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dto.ResponseTx'
          description: Successfully returns transaction data with pagination information
        '400':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Invalid request parameters
        '401':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Authentication failed
        '500':
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
          description: Internal server error
      security:
        - ApiKeyAuth: []
      tags:
        - Transaction Data
      description: Get transaction data for specified trading pairs with pagination support
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dto.RequestTx'
        description: >-
          Transaction request parameters, including symbol (required),
          start_time, end_time, page (page number starting from 1, default 1),
          page_size (records per page, default 100), min_amount (minimum
          transaction amount), max_amount (maximum transaction amount),
          min_value (minimum transaction value), max_value (maximum transaction
          value) and other fields
        required: true
      summary: Get transaction data
components:
  schemas:
    dto.RequestTx:
      properties:
        end_time:
          description: |-
            End time (Unix timestamp in seconds)
            example: 1625097600
          type: integer
        max_amount:
          description: |-
            Maximum transaction amount (denominated in SOL)
            minimum: 0
            example: 10.0
          minimum: 0
          type: number
        max_value:
          description: |-
            Maximum transaction value (denominated in USD)
            minimum: 0
            example: 1000.0
          minimum: 0
          type: number
        min_amount:
          description: |-
            Minimum transaction amount (denominated in SOL)
            minimum: 0
            example: 1.5
          minimum: 0
          type: number
        min_value:
          description: |-
            Minimum transaction value (denominated in USD)
            minimum: 0
            example: 100.0
          minimum: 0
          type: number
        page:
          description: |-
            Page number, starting from 1, default is 1
            minimum: 1
            default: 1
            example: 1
          minimum: 1
          type: integer
        page_size:
          description: |-
            Records per page, default is 100, maximum 1000
            minimum: 1
            maximum: 1000
            default: 100
            example: 100
          maximum: 1000
          minimum: 1
          type: integer
        sort_by:
          description: |-
            Sort field, supports: time(default), amount, value
            enum: time,amount,value
            default: time
            example: time
          enum:
            - time
            - amount
            - value
          type: string
        sort_order:
          description: |-
            Sort direction
            enum: asc,desc
            default: desc
            example: desc
          enum:
            - asc
            - desc
          type: string
        source:
          description: >-
            Filter by DEX

            enum: Raydium,Pump Fun,Raydium V4,meteora DYN,Raydium CPMM,meteora
            DLMM,Orca
          enum:
            - Raydium
            - Pump Fun
            - Raydium V4
            - meteora DYN
            - Raydium CPMM
            - meteora DLMM
            - Orca
          type: string
        start_time:
          description: |-
            Start time (Unix timestamp in seconds)
            example: 1622505600
          type: integer
        symbol:
          description: |-
            Trading pair symbol
            required: true
            example: 7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU
          type: string
        trader:
          description: Filter by trader
          type: string
      required:
        - symbol
      type: object
    dto.ResponseTx:
      properties:
        data:
          description: Transaction record data
          items:
            $ref: '#/components/schemas/dto.Trade'
          type: array
        page:
          description: Current page number
          type: integer
        page_size:
          description: Records per page
          type: integer
        symbol:
          description: Trading pair symbol
          type: string
        total_count:
          description: Total record count
          type: integer
        total_pages:
          description: Total page count
          type: integer
        wallets:
          description: List of filtered wallet addresses
          items:
            type: string
          type: array
      type: object
    dto.Trade:
      properties:
        amount:
          description: Transaction amount
          type: number
        price:
          description: Price in USD
          type: number
        signature:
          description: Transaction signature
          type: string
        source:
          description: Transaction source
          type: string
        symbol:
          description: 'Trading pair symbol, actually CA'
          type: string
        time:
          description: Transaction time in seconds
          type: integer
        trader:
          description: Trader address
          type: string
        type:
          allOf:
            - $ref: '#/components/schemas/dto.TradeType'
          description: Transaction type (buy/sell)
        url:
          description: Transaction URL
          type: string
        value:
          description: Transaction value (price * amount)
          type: number
      type: object
    dto.TradeType:
      enum:
        - buy
        - sell
        - trade
        - add_liquidity
        - remove_liquidity
      type: string
      x-enum-comments:
        TypeAddLiquidity: Add liquidity
        TypeBuy: Buy
        TypeRemoveLiquidity: Remove liquidity
        TypeSell: Sell
        TypeTrade: Trade
      x-enum-varnames:
        - TypeBuy
        - TypeSell
        - TypeTrade
        - TypeAddLiquidity
        - TypeRemoveLiquidity
  securitySchemes:
    ApiKeyAuth:
      description: API key for authentication. Required for all API calls.
      in: header
      name: HUBBLE-API-KEY
      type: apiKey

